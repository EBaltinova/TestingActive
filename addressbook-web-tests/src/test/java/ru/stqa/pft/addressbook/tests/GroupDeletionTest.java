package ru.stqa.pft.addressbook.tests;// Generated by Selenium IDE

import org.openqa.selenium.By;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;
import ru.stqa.pft.addressbook.model.GroupData;
import ru.stqa.pft.addressbook.model.Groups;

import java.util.Arrays;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.testng.Assert.assertEquals;

public class GroupDeletionTest extends TestBase {
    @BeforeMethod
    public void ensurePreconditions() {
        if (app.db().groups().size() == 0) {
            app.goTo().groupPage();
            app.group().create(new GroupData().withName("Test1"));
        }
    }

    @Test
    public void testGroupDeletion() {
        app.goTo().groupPage();
        Groups before = app.db().groups();
        GroupData deletedGroup = before.iterator().next();

        SoftAssert softAssert = new SoftAssert();
        assertThat("Add new contact button is not available", app.group().isClickable(By.linkText("add new")));

        Arrays
                .asList("new", "delete", "edit")
                .forEach((String elementName) -> {
                    String message = String.format("Element <%s> is not available", elementName);
                    softAssert.assertTrue(app.group().isClickable(By.name(elementName)), message);
                });
        softAssert.assertAll();

        app.group().delete(deletedGroup);
        Groups after = app.db().groups();
        assertThat(after, equalTo(before.without(deletedGroup)));
        verifyGroupListInUI();
    }
  }




